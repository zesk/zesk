options:
  docker: true

definitions:
  caches:
    apt-lists: /var/lib/apt/lists
    apt-cache: /var/cache/apt
  docker:
    memory: 6144
  services:
    mariadb:
      memory: 1024
      image: mariadb:latest
      variables:
        MARIADB_ROOT_PASSWORD: hard-to-guess
        MYSQL_ROOT_PASSWORD: hard-to-guess

image: python:3
pipelines:
  branches:
    develop:
      - step:
          name: Build and test
          services:
            - mariadb
          artifacts:
            - .env
            - .build/
            - .release-notes.md
            - test-coverage/
            - test.log
            - .memory_get_usage
            - memory-logs.txt
          caches:
            - pip
            - docker
            - apt-lists
            - apt-cache
          deployment: staging
          size: 2x
          script:
            - while true; do date && echo -n "Memory usage in megabytes:" && echo $(($(cat /sys/fs/cgroup/memory/memory.memsw.usage_in_bytes | awk '{print $1}')/1048576)) && echo "" && sleep 30; done >> memory-logs.txt &
            - export DATABASE_HOST=127.0.0.1
            - export CONTAINER_DATABASE_HOST=$BITBUCKET_DOCKER_HOST_INTERNAL
            - export DATABASE_ROOT_PASSWORD=hard-to-guess
            - bin/pipeline-setup.sh --develop --testsuite core
    master:
      - step:
          name: Build and test
          services:
            - mariadb
          artifacts:
            - .env
            - .build/
            - .release-notes.md
            - test-coverage/
            - test.log
            - .memory_get_usage
            - memory-logs.txt
          caches:
            - pip
            - docker
            - apt-lists
            - apt-cache
          deployment: production
          size: 2x
          script:
            - while true; do date && echo -n "Memory usage in megabytes:" && echo $(($(cat /sys/fs/cgroup/memory/memory.memsw.usage_in_bytes | awk '{print $1}')/1048576)) && echo "" && sleep 30; done >> memory-logs.txt &
            - export DATABASE_HOST=127.0.0.1
            - export CONTAINER_DATABASE_HOST=$BITBUCKET_DOCKER_HOST_INTERNAL
            - export DATABASE_ROOT_PASSWORD=hard-to-guess
            - bin/pipeline-setup.sh --testsuite core
      - step:
          name: Deploy
          trigger: manual
          caches:
            - pip
            - docker
            - apt-lists
            - apt-cache
          script:
            - bin/pipeline-release.sh
    deploy:
      - step:
          deployment: deploy
          name: Deploy
          size: 2x
          script:
            - bin/pipeline-release.sh
